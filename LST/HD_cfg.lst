C51 COMPILER V9.52.0.0   HD_CFG                                                            12/24/2015 16:08:13 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE HD_CFG
OBJECT MODULE PLACED IN .\OBJ\HD_cfg.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SRC\HD_cfg.c BROWSE DEBUG OBJECTEXTEND PRINT(.\LST\HD_cfg.lst) OBJECT(.\OBJ
                    -\HD_cfg.obj)

line level    source

   1          /*-----------------------------*
   2           *  include head files         *
   3           *----------------------------*/
   4          #include".\Head\HD_cfg.h"
   5          
   6          /*-----------------------------*
   7           *  Macros for constants       *
   8           *----------------------------*/
   9          
  10          /*-----------------------------*
  11           *  Macros for others          *
  12           *----------------------------*/
  13          
  14          /*-----------------------------*
  15           *  type definitions           *
  16           *----------------------------*/
  17          
  18          /*-----------------------------*
  19           *  structure,union and enum   *
  20           *----------------------------*/
  21          
  22          /*-----------------------------*
  23           *  public functions prototypes*
  24           *----------------------------*/
  25          void    System_INIT(void);
  26          
  27          /*-----------------------------*
  28           *  static functions prototypes*
  29           *----------------------------*/
  30          static  void    SetSysClock(void);
  31          static  void    Port_INIT(void);
  32          //static        void    PWM_INIT(void);
  33          static  void    Timer2_INIT(void);
  34          static  void    Timer3_INIT(void);
  35          static  void    IE_INIT(void);
  36          
  37          /*-----------------------------*
  38           *  public variable declaration*
  39           *----------------------------*/
  40          uint8   bdata   SysTime;                                        
  41          sbit    bSys1S_CookTime =       SysTime^0;      
  42          sbit    bSys1S_BookTime =       SysTime^1; 
  43          
  44          /*-----------------------------*
  45           *  static variable declaration*
  46           *----------------------------*/
  47          uint8   m_u8SysTickCnt = 0;
  48          uint8   g_u8PwrOnlineCnt =      0;
  49          uint16 xdata g_u16RelayDelayCnt;
  50          
  51          /*-----------------------------------------------------------------------------*
  52           *  Function Description:                                                      *
  53           *      Initialize the System.                                                 *
  54           *  Parameters:                                                                *
C51 COMPILER V9.52.0.0   HD_CFG                                                            12/24/2015 16:08:13 PAGE 2   

  55           *      None                                                                   *
  56           *  Return                                                                     *
  57           *      None                                                                   *
  58           *----------------------------------------------------------------------------*/
  59          void System_INIT(void)
  60          {
  61   1          EA  =       0;                                                      //关闭全中断
  62   1              SetSysClock();
  63   1              Port_INIT();
  64   1              Timer2_INIT();
  65   1          Timer3_INIT();
  66   1              ADC_INIT();
  67   1          LCD_INIT();
  68   1      //      PWM_INIT();
  69   1              IE_INIT();
  70   1          EA  =       1;                                                      //开启全中断
  71   1      }
  72          
  73          /*-----------------------------------------------------------------------------*
  74           *  Function Description:                                                      *
  75           *      Configures the System clock frequency                                  *
  76           *  Parameters:                                                                *
  77           *      None                                                                   *
  78           *  Return                                                                     *
  79           *      None                                                                   *
  80           *----------------------------------------------------------------------------*/
  81          static void SetSysClock(void)
  82          {
  83   1              CLKCON  &=      Bin(10011111);          //Fsys=Foscs
  84   1              CLKCON  |=      Bin(00001000);          //设置HFON=1,打开OSCXCLK
  85   1              delay(5);                                           //至少等待振荡器预热时间128*Tosc
  86   1              CLKCON  |=      Bin(00000100);          //设置FS=1,选择OSCXCLK作为OSCSCLK                 
  87   1      }
  88          
  89          /*-----------------------------------------------------------------------------*
  90           *  Function Description:                                                      *
  91           *      Initialize the GPIO.                                                   *
  92           *  Parameters:                                                                *
  93           *      None                                                                   *
  94           *  Return                                                                     *
  95           *      None                                                                   *
  96           *----------------------------------------------------------------------------*/
  97          static  void Port_INIT(void)
  98          {
  99   1              // initialize ports
 100   1              //       1 : P02          o SEG19
 101   1              //   2 : P03      o IO_HEAT_ON
 102   1              //   3 : P04      i IO_LID_OC
 103   1              //   4 : P05      o IO_HEAT_TOP
 104   1              //   5 : P06      o IO_HEAT_ARD
 105   1              //   6 : P07      o IO_HEAT_BOT
 106   1              //   7 : GND
 107   1              //   8 : XTAL1    i 32.768KHz
 108   1              //   9 : XTAL2    i 32.768KHz
 109   1              //  10 : P52      o BUZ
 110   1              //  11 : P53      o IO_LED_BKL
 111   1              //  12 : VDD
 112   1              //  13 : P54      o SEG20
 113   1              //  14 : P55      o SEG21
 114   1              //  15 : P47      o SEG22
 115   1              //  16 : P46      o SEG23
 116   1              //  17 : P45      o SEG24
C51 COMPILER V9.52.0.0   HD_CFG                                                            12/24/2015 16:08:13 PAGE 3   

 117   1              //  18 : P44      o SCL
 118   1              //  19 : P43      o SDA
 119   1              //  20 : AN2      o AD_POWER_IN
 120   1              //  21 : AN1      i AD_TOP_IN
 121   1              //  22 : AN0      i AD_BOT_IN
 122   1              //  23 : P37      o COM8
 123   1              //  24 : P36      o COM7
 124   1              //  25 : P35      o COM6
 125   1              //  26 : P34      o COM5
 126   1              //  27 : P33      o COM4
 127   1              //  28 : P32      o COM3
 128   1              //  29 : P31      o COM2
 129   1              //  30 : P30      o COM1
 130   1              //  31 : P10      o SEG1
 131   1              //  32 : P11      o SEG2
 132   1              //  33 : P12      o SEG3
 133   1              //  34 : P13      o SEG4
 134   1              //  35 : P14      o SEG5
 135   1              //  36 : P15      o SEG6
 136   1              //  37 : P16      o SEG7
 137   1              //  38 : P17      o SEG8
 138   1              //  39 : P20      o SEG9
 139   1              //  40 : P21      o SEG10
 140   1              //  41 : P22      o SEG11
 141   1              //  42 : P23      o SEG12
 142   1              //  43 : P24      o SEG13
 143   1              //  44 : P25      o SEG14
 144   1              //  45 : P26      o SEG15
 145   1              //  46 : P27      o SEG16
 146   1              //  47 : P00      o SEG17
 147   1              //  48 : P01      o SEG18
 148   1              
 149   1          P0SS        =       Bin(11111111);          //P4.7-P4.5/P5.5-P5.4/P0.2-P0.0作为SEG17~SEG24
 150   1          P1SS        =       Bin(11111111);          //P1.0~P1.7作为SEG1~SEG8
 151   1              P2SS    =       Bin(11111111);          //P2.0~P2.7作为SEG9~SEG16
 152   1              P3SS    =   Bin(11111111);      //P3.0~P3.7作为COM1~COM8
 153   1      
 154   1              //没有用作IO的引脚设置为输出（低电平）
 155   1              P0CR    =       Bin(11101111);      
 156   1              P0PCR   =       Bin(00000000);
 157   1              P0              =       Bin(00000000);
 158   1          P0OS        =       Bin(00000000);
 159   1              
 160   1              P1CR    =       Bin(11111111);
 161   1              P1PCR   =       Bin(00000000);
 162   1              P1              =       Bin(00000000);
 163   1              
 164   1              P2CR    =       Bin(11111111);
 165   1              P2PCR   =       Bin(00000000);
 166   1              P2              =       Bin(00000000);
 167   1              
 168   1              P3CR    =       Bin(11111111);
 169   1              P3PCR   =       Bin(00000000);
 170   1              P3              =       Bin(00000000);
 171   1              
 172   1              P4CR    =       Bin(11111000);
 173   1              P4PCR   =       Bin(00011000);      //P4.3/P4.4上拉,模拟iic接口
 174   1              P4              =       Bin(00000000);
 175   1              
 176   1              Enter_Bank1;
 177   1              P5CR    =       Bin(00111100);
 178   1              P5PCR   =       Bin(00000000);
C51 COMPILER V9.52.0.0   HD_CFG                                                            12/24/2015 16:08:13 PAGE 4   

 179   1              P5              =       Bin(00000000);
 180   1              Enter_Bank0;
 181   1      }
 182          
 183          /*-----------------------------------------------------------------------------*
 184           *  Function Description:                                                      *
 185           *      Initialize the Timer2.                                                 *
 186           *  Parameters:                                                                *
 187           *      None                                                                   *
 188           *  Return                                                                     *
 189           *      None                                                                   *
 190           *----------------------------------------------------------------------------*/
 191          static void Timer2_INIT(void)
 192          {
 193   1              TR2             =       0;                                              // stop timer2
 194   1              TF2             =       0;                      // 清定时器2溢出标志
 195   1              T2CON   =       Bin(00000000);                  // 16位带重载功能的定时器
 196   1              T2MOD   =       Bin(00000000);                  // 时钟源为系统时钟,仅作为递增计数器
 197   1              RCAP2L  =       LOBYTE(CLOCK_1MS);              // 载入定时初值
 198   1              RCAP2H  =       HIBYTE(CLOCK_1MS);
 199   1              TL2             =       LOBYTE(CLOCK_1MS);      
 200   1              TH2             =       HIBYTE(CLOCK_1MS);
 201   1              TR2             =       1;                                              // start timer2
 202   1      }
 203          
 204          /*-----------------------------------------------------------------------------*
 205           *  Function Description:                                                      *
 206           *      Initialize the PWM.                                                    *
 207           *  Parameters:                                                                *
 208           *      None                                                                   *
 209           *  Return                                                                     *
 210           *      None                                                                   *
 211           *----------------------------------------------------------------------------*/
 212          //static void PWM_INIT(void)    
 213          //{
 214          //      PWMLO   =       0x55;                   //解锁PWM寄存器
 215          //      PWM0PL  =       186;                    //设置PWM周期Period = 186*(16/12us) = 250us,Fpwm = 4Khz         
 216          //      PWM0PH  =       0;
 217          //      PWM0DL  =       93;                         //占空比1/2
 218          //      PWM0DH  =       0;
 219          //      PWM0C   =   Bin(00000011);      //高电平驱动,PWM时钟=(Fsoc/16)MHz       
 220          //      PWMEN   =       0;                              //PWM0输出禁止
 221          //      PWMLO   =       0xAA;                   //锁定PWM寄存器
 222          //}
 223          
 224          /*-----------------------------------------------------------------------------*
 225           *  Function Description:                                                      *
 226           *      Initialize the Timer3.                                                 *
 227           *  Parameters:                                                                *
 228           *      None                                                                   *
 229           *  Return                                                                     *
 230           *      None                                                                   *
 231           *----------------------------------------------------------------------------*/
 232          static void Timer3_INIT(void)
 233          {
 234   1              Enter_Bank1;
 235   1          TR3         =       0;                      // stop timer3
 236   1          TF3         =       0;                                              // 清定时器3溢出标志
 237   1              T3PS0   =       0;                                              // 定时器3预分频比1/1
 238   1              T3PS1   =       0;
 239   1              T3CLKS0 =       0;                                              // 外部32.768Khz晶振
 240   1              T3CLKS1 =       1;
C51 COMPILER V9.52.0.0   HD_CFG                                                            12/24/2015 16:08:13 PAGE 5   

 241   1              TL3             =       LOBYTE(CLOCK_1S);               // 载入定时初值
 242   1              TH3             =       HIBYTE(CLOCK_1S);
 243   1              TR3     =   1;                      // start timer3     
 244   1              Enter_Bank0;
 245   1      }
 246          /*-----------------------------------------------------------------------------*
 247           *  Function Description:                                                      *
 248           *      Initialize the Interrupt.                                              *
 249           *  Parameters:                                                                *
 250           *      None                                                                   *
 251           *  Return                                                                     *
 252           *      None                                                                   *
 253           *----------------------------------------------------------------------------*/
 254          static void IE_INIT(void)
 255          {
 256   1              //                       Bit7   Bit6  Bit5  Bit4  Bit3  Bit2  Bit1  Bit0 
 257   1              //IEN0           EA     EADC  ET2   ES0    ---  EX1   ET5   EX0 
 258   1              //IEN1           LPD    ET4   EPWM  ET3   EX4   EX3   EX2   ESPI
 259   1              //使能ADC中断、Timer2中断、Timer3中断
 260   1              IEN0    =       Bin(01100000);                  
 261   1              IEN1    =       Bin(00010000);
 262   1              IENC    =       0;
 263   1              IENC1   =       Bin(00010000);//允许定时器3溢出中断
 264   1      }
 265          
 266          /*-----------------------------------------------------------------------------*
 267           *  Function Description:                                                      *
 268           *      定时器2中断处理(中断入口地址 = 0x002B =43=N * 8 + 3=>>N = 5)               *
 269           *  Parameters:                                                                *
 270           *      None                                                                   *
 271           *  Return                                                                     *
 272           *      None                                                                   *
 273           *----------------------------------------------------------------------------*/
 274          void    Timer2_ISP(void) interrupt 5
 275          {
 276   1          uint8   u8Bankbak = INSCON;
 277   1          
 278   1          Enter_Bank0;
 279   1              EA      =       0;                                      //关闭全中断
 280   1              TF2     =       0;                                      //清除Timer2中断溢出标志,Timer2能自动重载       
 281   1              
 282   1              m_u8SysTickCnt++;
 283   1      
 284   1              if(m_u8SysTickCnt>=8) 
 285   1              {
 286   2                      m_u8SysTickCnt = 0;
 287   2                      bSysTick = 1;                   // 系统8MS时钟节拍标志
 288   2              }
 289   1      
 290   1          if(bHeatPwrReq)             //交流驱动加热总开关
 291   1          {
 292   2              if(bPwroffline==0)
 293   2              {
 294   3                  if(IO_HEAT_ON)
 295   3                  {
 296   4                      IO_HEAT_ON = 0;
 297   4                  }
 298   3                  else
 299   3                  {
 300   4                      IO_HEAT_ON = 1;
 301   4                  }
 302   3              }
C51 COMPILER V9.52.0.0   HD_CFG                                                            12/24/2015 16:08:13 PAGE 6   

 303   2              
 304   2              if(g_u16RelayDelayCnt<1000)
 305   2              {
 306   3                  g_u16RelayDelayCnt++;
 307   3              }
 308   2          }
 309   1          else
 310   1          {
 311   2              g_u16RelayDelayCnt = 0;
 312   2              IO_HEAT_ON = 0;   
 313   2          }
 314   1      
 315   1              EA                      =       1;                      //开启全中断
 316   1          INSCON = u8Bankbak;
 317   1      }
 318          
 319          /*-----------------------------------------------------------------------------*
 320           *  Function Description:                                                      *
 321           *      定时器3中断处理(中断入口地址 = 0x005B =91=N * 8 + 3=>>N = 11)              *
 322           *  Parameters:                                                                *
 323           *      None                                                                   *
 324           *  Return                                                                     *
 325           *      None                                                                   *
 326           *----------------------------------------------------------------------------*/
 327          void    Timer3_ISP(void) interrupt 11
 328          {
 329   1          uint8   u8Bankbak = INSCON;
 330   1          
 331   1          Enter_Bank0;  
 332   1              EA              =       0;                                                      //关闭全中断
 333   1              
 334   1              Enter_Bank1;
 335   1              TF3             =       0;                                                      //清除Timer3中断溢出标志
 336   1              Enter_Bank0;
 337   1      
 338   1              SysTime = 0xff;                                                 //系统1S时钟
 339   1              EA              =       1;                                                      //开启全中断
 340   1          INSCON = u8Bankbak;
 341   1      }
 342          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
